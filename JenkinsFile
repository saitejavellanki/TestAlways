pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE = 'tejvellank9362/testalways'
    }
    
    stages {
        stage('Pull Image') {
            steps {
                bat "docker pull ${DOCKER_IMAGE}"
            }
        }
        
        stage('Run Container') {
            steps {
                bat """
                    docker run -d ^
                        --name my-container ^
                        ${DOCKER_IMAGE} ^
                        java Hello
                """
            }
        }
        
        stage('View Output') {
            steps {
                // Wait for the container to start and capture its logs
                bat '''
                    timeout /t 5
                    docker logs my-container
                '''
                
                // Verify container executed successfully
                bat '''
                    FOR /F "tokens=* USEBACKQ" %%F IN (`docker inspect -f {{.State.ExitCode}} my-container`) DO (
                        IF NOT %%F==0 (
                            echo Container failed with exit code %%F
                            exit /b 1
                        )
                    )
                '''
            }
        }
    }
    
    post {
        always {
            // Clean up container regardless of pipeline outcome
            bat """
                docker stop my-container || exit /b 0
                docker rm my-container || exit /b 0
            """
        }
    }
}